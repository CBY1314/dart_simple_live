name: Build Go & Android APK and Release

on:
  push:
    tags:
      - "v*"  # 仅 v 开头的 tag 触发

jobs:
  go-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    strategy:
      matrix:
        platform:
          - { os: linux, goos: linux, goarch: amd64, suffix: "" }
          - { os: linux, goos: linux, goarch: arm64, suffix: "-arm64" }
          - { os: windows, goos: windows, goarch: amd64, suffix: ".exe" }
          - { os: macos, goos: darwin, goarch: amd64, suffix: "-darwin" }
          - { os: macos, goos: darwin, goarch: arm64, suffix: "-darwin-arm64" }
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'

      - name: Build
        env:
          GOOS: ${{ matrix.platform.goos }}
          GOARCH: ${{ matrix.platform.goarch }}
          CGO_ENABLED: 0
        run: |
          output_name="main-${{ matrix.platform.goos }}-${{ matrix.platform.goarch }}${{ matrix.platform.suffix }}"
          go build -v -o $output_name .
          echo "BINARY_NAME=$output_name" >> $GITHUB_ENV

      - name: Upload Go Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BINARY_NAME }}
          path: ${{ env.BINARY_NAME }}

  android-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build APK
        run: |
          if [ -f "gradlew" ]; then
            ./gradlew assembleRelease
          elif [ -f "pubspec.yaml" ]; then
            flutter build apk
          fi

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release.apk
          path: |
            app/build/outputs/apk/release/app-release.apk
            build/app/outputs/flutter-apk/app-release.apk

  release:
    needs: [go-build, android-build]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Verify Files
        run: ls -R artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/main-darwin-amd64-darwin
            artifacts/main-darwin-arm64-darwin-arm64
            artifacts/main-linux-amd64
            artifacts/main-linux-arm64-arm64
            artifacts/main-windows-amd64.exe
            artifacts/app-release.apk
          tag_name: ${{ github.ref_name }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
